1. Какие существуют виды потоков ввода/вывода, какова иерархия?
Байтовые потоки ввода вывода это InputStream и OutputStream.
Символьные потоки ввода вывода это Reader и Writer.
Напрямую с ними не работают, использую обертки.
BufferedReader или BufferedWriter.
BufferedInputStream или BufferedOutputStream
ObjectInputStream и ObjectOutputStream
2. Что вы знаете о RandomAccessFile?
Это класс позволяющий читать и писать в файл не последовательно, в отличие от InputStream.
3. Что вы знаете об адаптерах и декораторах? Как это используется в IO?
Адаптеры и декораторы оборачивают исходный класс, расширяя его функционал.
Например, BufferedReader BufferedWriter являются обертками над InputStream и OutputStream
4. Какой класс-надстройка позволяет читать данные из входного байтового потока в формате примитивных типов данных?
DataInputStream.
5. Какой класс-надстройка позволяет ускорить чтение/запись за счет использования буфера?
BufferedReader, BufferedWriter
6. Какие классы позволяют преобразовать байтовые потоки в символьные и обратно?
OutputStreamWriter, InputStreamReader
7. Какой класс предназначен для работы с элементами файловой системы?
Класс File
8. Какой символ является разделителем при указании пути к элементу файловой системы?
Зависит от системы. В Unix "/", в windows "\".
9. Как выбрать все элементы файловой системы определенного каталога по критерию (например, с определенным расширением)?
Files.list(Path pat). В Stream задать нужный Predicate и обработать результат.
10. Что вы знаете об интерфейсе FilenameFilter?
Является функциональным интерфейсом, имеет один метод accept.
Проверяет файл на соответствие заданным критериям, например имени.
11. Что такое сериализация? Как она появилась? Какую проблему она решает?
Сериализация это процесс сохранения объектов программы в набор байт.
Позволяет передавать и сохранять объекты.
12. Какие условия “благополучной” сериализации объекта?
Класс должен имплементировать маркерный интерфейс Serializable.
Все ссылочные поля класса должны имплементировать интерфейс Serializable, либо помечены ключевым словом transient.
13. Какие классы позволяют архивировать объекты?
ZipOutputStream ZipInputStream
14. Разница между absolute и canonical path?
Абсолютных путей до файла может быть несколько, а каноникал путь только один, при это он сам является абсолютным.
15. Какой контекст не сериализуем?
Помеченный ключевым словом transient.
16. Какие ошибки возможны в процессе сериализации и десериализации?
IOException, ClassCastException, InvalidClassException
17. Отличия расширенной сериализации
Externalizable позволяет управлять потоком сериализации.
Нужно реализовать два метода интерфейса
ReadExternal и WriteExternal
18. Три способа клонирования объекта в Java
Имплементируя интрефейс Clonable.
Используя механизм сериализации
Используя сторонние библиотеки, например сериализация в json
19. Какие существуют протоколы записи в поток? Как их изменить?
FileOutputStream ByteArrayOutputStream ObjectOutputStream.





